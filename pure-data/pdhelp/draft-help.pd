#N canvas 436 36 600 620 10;
#X obj 0 0 cnv 15 600 40 empty empty draft_index 3 12 0 18 #c4dcdc #000000 0;
#X obj 10 50 draft/array;
#X text 200 50 ;
#X obj 10 80 draft/autogroup;
#X text 200 80 Add a given object to the defined Draft autogroup \,  if applicable.;
#X obj 10 110 draft/clone;
#X text 200 110 clone(obj \, [delta \, forcedraft]);
#X obj 10 140 draft/compareObjects;
#X text 200 140 Print the differences between 2 objects.;
#X obj 10 170 draft/compare_objects;
#X text 200 170 Print the differences between 2 objects.;
#X obj 10 200 draft/convertDraftTexts;
#X text 200 200 Convert Text. DEPRECATED. Use 'convert_draft_texts'.;
#X obj 10 230 draft/convert_draft_texts;
#X text 200 230 Convert the given Annotation to a Draft text.;
#X obj 10 260 draft/copyMovedEdges;
#X text 200 260 ;
#X obj 10 290 draft/copyRotatedEdges;
#X text 200 290 ;
#X obj 10 320 draft/copyScaledEdges;
#X text 200 320 ;
#X obj 10 350 draft/copy_moved_edges;
#X text 200 350 ;
#X obj 10 380 draft/copy_rotated_edges;
#X text 200 380 ;
#X obj 10 410 draft/copy_scaled_edges;
#X text 200 410 ;
#X obj 10 440 draft/cut;
#X text 200 440 Return a cut object made from the difference of the 2 given objects.;
#X obj 10 470 draft/dimDash;
#X text 200 470 Return a SoSeparator with a line used to make dimension dashes.;
#X obj 10 500 draft/dimSymbol;
#X text 200 500 Return the specified dimension symbol.;
#X obj 10 530 draft/dim_dash;
#X text 200 530 Return a SoSeparator with a line used to make dimension dashes.;
#X obj 10 560 draft/dim_symbol;
#X text 200 560 Return the specified dimension symbol.;
#X obj 10 590 draft/downgrade;
#X text 200 590 Downgrade the given objects.;
#X obj 10 620 draft/draftify;
#X text 200 620 draftify(objectslist \, [makeblock] \, [delete]);
#X obj 10 650 draft/extrude;
#X text 200 650 extrude(object \,  vector \,  [solid]);
#X obj 10 680 draft/filterObjectsForModifiers;
#X text 200 680 ;
#X obj 10 710 draft/filter_objects_for_modifiers;
#X text 200 710 ;
#X obj 10 740 draft/formatObject;
#X text 200 740 Apply visual properties from the Draft toolbar or another object.;
#X obj 10 770 draft/format_object;
#X text 200 770 Apply visual properties from the Draft toolbar or another object.;
#X obj 10 800 draft/fuse;
#X text 200 800 fuse(oject1 \,  object2);
#X obj 10 830 draft/getCloneBase;
#X text 200 830 Return the object cloned by this object \,  if any.;
#X obj 10 860 draft/getDXF;
#X text 200 860 Return DXF string of the object. DEPRECATED. Use 'get_dxf'.;
#X obj 10 890 draft/getGroupContents;
#X text 200 890 Return a list of objects from groups. DEPRECATED.;
#X obj 10 920 draft/getMovableChildren;
#X text 200 920 Return a list of objects with child objects. DEPRECATED.;
#X obj 10 950 draft/getObjectsOfType;
#X text 200 950 Return only the objects that match the type in the list of objects.;
#X obj 10 980 draft/getParam;
#X text 200 980 Return a parameter value from the current parameter database.;
#X obj 10 1010 draft/getParamType;
#X text 200 1010 Return the type of the parameter entered.;
#X obj 10 1040 draft/getRealName;
#X text 200 1040 Strip the trailing numbers from a string to get only the letters.;
#X obj 10 1070 draft/getSVG;
#X text 200 1070 Return SVG string of the object. DEPRECATED. Use 'get_svg'.;
#X obj 10 1100 draft/getSelection;
#X text 200 1100 Return the current selected objects.;
#X obj 10 1130 draft/getSelectionEx;
#X text 200 1130 Return the current selected objects together with their subelements.;
#X obj 10 1160 draft/getType;
#X text 200 1160 Return a string indicating the type of the given object.;
#X obj 10 1190 draft/get_bbox;
#X text 200 1190 Return a BoundBox from any object that has a Coin RootNode.;
#X obj 10 1220 draft/get_clone_base;
#X text 200 1220 Return the object cloned by this object \,  if any.;
#X obj 10 1250 draft/get_dxf;
#X text 200 1250 Return a DXF entity from the given object.;
#X obj 10 1280 draft/get_group_contents;
#X text 200 1280 Return a list of objects from expanding the input groups.;
#X obj 10 1310 draft/get_group_names;
#X text 200 1310 Return a list of names of existing groups in the document.;
#X obj 10 1340 draft/get_movable_children;
#X text 200 1340 Return a list of objects with child objects that move with a host.;
#X obj 10 1370 draft/get_objects_of_type;
#X text 200 1370 Return only the objects that match the type in the list of objects.;
#X obj 10 1400 draft/get_param;
#X text 200 1400 Return a parameter value from the current parameter database.;
#X obj 10 1430 draft/get_param_type;
#X text 200 1430 Return the type of the parameter entered.;
#X obj 10 1460 draft/get_real_name;
#X text 200 1460 Strip the trailing numbers from a string to get only the letters.;
#X obj 10 1490 draft/get_rgb;
#X text 200 1490 Return an RRGGBB value #000000 from a FreeCAD color.;
#X obj 10 1520 draft/get_selection;
#X text 200 1520 Return the current selected objects.;
#X obj 10 1550 draft/get_selection_ex;
#X text 200 1550 Return the current selected objects together with their subelements.;
#X obj 10 1580 draft/get_svg;
#X text 200 1580 Return a string containing an SVG representation of the object.;
#X obj 10 1610 draft/get_type;
#X text 200 1610 Return a string indicating the type of the given object.;
#X obj 10 1640 draft/getrgb;
#X text 200 1640 Return an RRGGBB value #000000 from a FreeCAD color.;
#X obj 10 1670 draft/heal;
#X text 200 1670 heal([objlist] \, [delete] \, [reparent]);
#X obj 10 1700 draft/isClone;
#X text 200 1700 Return True if the given object is a clone of a certain type.;
#X obj 10 1730 draft/isClosedEdge;
#X text 200 1730 ;
#X obj 10 1760 draft/is_clone;
#X text 200 1760 Return True if the given object is a clone of a certain type.;
#X obj 10 1790 draft/is_closed_edge;
#X text 200 1790 ;
#X obj 10 1820 draft/joinTwoWires;
#X text 200 1820 joinTwoWires(object \,  object): joins two wires if they share a common;
#X obj 10 1850 draft/joinWires;
#X text 200 1850 joinWires(objects): merges a set of wires where possible \,  if any of those;
#X obj 10 1880 draft/join_two_wires;
#X text 200 1880 joinTwoWires(object \,  object): joins two wires if they share a common;
#X obj 10 1910 draft/join_wires;
#X text 200 1910 joinWires(objects): merges a set of wires where possible \,  if any of those;
#X obj 10 1940 draft/loadTexture;
#X text 200 1940 Return a Coin.SoSFImage to use as a texture for a 2D plane.;
#X obj 10 1970 draft/load_texture;
#X text 200 1970 Return a Coin.SoSFImage to use as a texture for a 2D plane.;
#X obj 10 2000 draft/makeAngularDimension;
#X text 200 2000 Create an angle dimension. DEPRECATED. Use 'make_angular_dimension'.;
#X obj 10 2030 draft/makeArray;
#X text 200 2030 Create an Array. DEPRECATED. Use 'make_array'.;
#X obj 10 2060 draft/makeBSpline;
#X text 200 2060 make_bspline(pointslist \,  [closed] \,  [placement]);
#X obj 10 2090 draft/makeBezCurve;
#X text 200 2090 make_bezcurve(pointslist \,  [closed] \,  [placement]);
#X obj 10 2120 draft/makeBlock;
#X text 200 2120 make_block(objectslist);
#X obj 10 2150 draft/makeCircle;
#X text 200 2150 make_circle(radius \,  [placement \,  face \,  startangle \,  endangle]);
#X obj 10 2180 draft/makeCopy;
#X text 200 2180 makeCopy(object \,  [force] \,  [reparent]);
#X obj 10 2210 draft/makeDimension;
#X text 200 2210 Create a dimension. DEPRECATED. Use 'make_dimension'.;
#X obj 10 2240 draft/makeDrawingView;
#X text 200 2240 ;
#X obj 10 2270 draft/makeEllipse;
#X text 200 2270 make_ellipse(majradius \,  minradius \,  [placement] \,  [face] \,  [support]);
#X obj 10 2300 draft/makeFacebinder;
#X text 200 2300 makeFacebinder(selectionset \,  [name]);
#X obj 10 2330 draft/makeLabel;
#X text 200 2330 Create a Label. DEPRECATED. Use 'make_label'.;
#X obj 10 2360 draft/makeLayer;
#X text 200 2360 Create a Layer. DEPRECATED. Use 'make_layer'.;
#X obj 10 2390 draft/makeLine;
#X text 200 2390 makeLine(first_param \,  p2);
#X obj 10 2420 draft/makePathArray;
#X text 200 2420 Create PathArray. DEPRECATED. Use 'make_path_array'.;
#X obj 10 2450 draft/makePoint;
#X text 200 2450  makePoint(x \, y \, z  \, [color(r \, g \, b) \, point_size]) or;
#X obj 10 2480 draft/makePointArray;
#X text 200 2480 Create PointArray. DEPRECATED. Use 'make_point_array'.;
#X obj 10 2510 draft/makePolygon;
#X text 200 2510 makePolgon(edges \, [radius] \, [inscribed] \, [placement] \, [face]);
#X obj 10 2540 draft/makeRectangle;
#X text 200 2540 makeRectangle(length \,  width \,  [placement] \,  [face]);
#X obj 10 2570 draft/makeShape2DView;
#X text 200 2570 makeShape2DView(object \,  [projectionVector] \,  [facenumbers]);
#X obj 10 2600 draft/makeShapeString;
#X text 200 2600 ShapeString(Text \, FontFile \, [Height] \, [Track]);
#X obj 10 2630 draft/makeSketch;
#X text 200 2630 makeSketch(objects_list \, [autoconstraints] \, [addTo] \, [delete] \, ;
#X obj 10 2660 draft/makeText;
#X text 200 2660 Create Text. DEPRECATED. Use 'make_text'.;
#X obj 10 2690 draft/makeWire;
#X text 200 2690 makeWire(pointslist \, [closed] \, [placement]);
#X obj 10 2720 draft/makeWorkingPlaneProxy;
#X text 200 2720 make_working_plane_proxy(placement);
#X obj 10 2750 draft/make_angular_dimension;
#X text 200 2750 Create an angular dimension from the given center and angles.;
#X obj 10 2780 draft/make_arc_3points;
#X text 200 2780 Draw a circular arc defined by three points in the circumference.;
#X obj 10 2810 draft/make_array;
#X text 200 2810 Create a Draft Array of the given object.;
#X obj 10 2840 draft/make_bezcurve;
#X text 200 2840 make_bezcurve(pointslist \,  [closed] \,  [placement]);
#X obj 10 2870 draft/make_block;
#X text 200 2870 make_block(objectslist);
#X obj 10 2900 draft/make_bspline;
#X text 200 2900 make_bspline(pointslist \,  [closed] \,  [placement]);
#X obj 10 2930 draft/make_circle;
#X text 200 2930 make_circle(radius \,  [placement \,  face \,  startangle \,  endangle]);
#X obj 10 2960 draft/make_circular_array;
#X text 200 2960 Create a circular array from the given object.;
#X obj 10 2990 draft/make_clone;
#X text 200 2990 clone(obj \, [delta \, forcedraft]);
#X obj 10 3020 draft/make_copy;
#X text 200 3020 makeCopy(object \,  [force] \,  [reparent]);
#X obj 10 3050 draft/make_dimension;
#X text 200 3050 Create one of three types of dimension objects.;
#X obj 10 3080 draft/make_drawing_view;
#X text 200 3080 ;
#X obj 10 3110 draft/make_ellipse;
#X text 200 3110 make_ellipse(majradius \,  minradius \,  [placement] \,  [face] \,  [support]);
#X obj 10 3140 draft/make_facebinder;
#X text 200 3140 makeFacebinder(selectionset \,  [name]);
#X obj 10 3170 draft/make_fillet;
#X text 200 3170 Create a fillet between two lines or Part.Edges.;
#X obj 10 3200 draft/make_label;
#X text 200 3200 Create a Label object containing different types of information.;
#X obj 10 3230 draft/make_layer;
#X text 200 3230 Create a Layer object in the active document.;
#X obj 10 3260 draft/make_line;
#X text 200 3260 makeLine(first_param \,  p2);
#X obj 10 3290 draft/make_linear_dimension;
#X text 200 3290 Create a free linear dimension from two main points.;
#X obj 10 3320 draft/make_linear_dimension_obj;
#X text 200 3320 Create a linear dimension from an object.;
#X obj 10 3350 draft/make_ortho_array;
#X text 200 3350 Create an orthogonal array from the given object.;
#X obj 10 3380 draft/make_ortho_array2d;
#X text 200 3380 Create a 2D orthogonal array from the given object.;
#X obj 10 3410 draft/make_path_array;
#X text 200 3410 Make a Draft PathArray object.;
#X obj 10 3440 draft/make_path_twisted_array;
#X text 200 3440 Create a Path twisted array.;
#X obj 10 3470 draft/make_point;
#X text 200 3470  makePoint(x \, y \, z  \, [color(r \, g \, b) \, point_size]) or;
#X obj 10 3500 draft/make_point_array;
#X text 200 3500 Make a Draft PointArray object.;
#X obj 10 3530 draft/make_polar_array;
#X text 200 3530 Create a polar array from the given object.;
#X obj 10 3560 draft/make_polygon;
#X text 200 3560 makePolgon(edges \, [radius] \, [inscribed] \, [placement] \, [face]);
#X obj 10 3590 draft/make_radial_dimension_obj;
#X text 200 3590 Create a radial or diameter dimension from an arc object.;
#X obj 10 3620 draft/make_rect_array;
#X text 200 3620 Create a rectangular array from the given object.;
#X obj 10 3650 draft/make_rect_array2d;
#X text 200 3650 Create a 2D rectangular array from the given object.;
#X obj 10 3680 draft/make_rectangle;
#X text 200 3680 makeRectangle(length \,  width \,  [placement] \,  [face]);
#X obj 10 3710 draft/make_shape2dview;
#X text 200 3710 makeShape2DView(object \,  [projectionVector] \,  [facenumbers]);
#X obj 10 3740 draft/make_shapestring;
#X text 200 3740 ShapeString(Text \, FontFile \, [Height] \, [Track]);
#X obj 10 3770 draft/make_sketch;
#X text 200 3770 makeSketch(objects_list \, [autoconstraints] \, [addTo] \, [delete] \, ;
#X obj 10 3800 draft/make_text;
#X text 200 3800 Create a Text object containing the given list of strings.;
#X obj 10 3830 draft/make_wire;
#X text 200 3830 makeWire(pointslist \, [closed] \, [placement]);
#X obj 10 3860 draft/make_workingplaneproxy;
#X text 200 3860 make_working_plane_proxy(placement);
#X obj 10 3890 draft/mirror;
#X text 200 3890 Create a mirror object from the provided list and line.;
#X obj 10 3920 draft/move;
#X text 200 3920 move(objects \, vector \, [copy]);
#X obj 10 3950 draft/moveEdge;
#X text 200 3950 ;
#X obj 10 3980 draft/moveVertex;
#X text 200 3980 ;
#X obj 10 4010 draft/move_edge;
#X text 200 4010 ;
#X obj 10 4040 draft/move_vertex;
#X text 200 4040 ;
#X obj 10 4070 draft/offset;
#X text 200 4070 offset(object \, delta \, [copymode] \, [bind]);
#X obj 10 4100 draft/printShape;
#X text 200 4100 Print detailed information of a topological shape.;
#X obj 10 4130 draft/print_shape;
#X text 200 4130 Print detailed information of a topological shape.;
#X obj 10 4160 draft/removeHidden;
#X text 200 4160 Return only the visible objects in the list.;
#X obj 10 4190 draft/remove_hidden;
#X text 200 4190 Return only the visible objects in the list.;
#X obj 10 4220 draft/rotate;
#X text 200 4220 rotate(objects \, angle \, [center \, axis \, copy]);
#X obj 10 4250 draft/rotateEdge;
#X text 200 4250 ;
#X obj 10 4280 draft/rotateVertex;
#X text 200 4280 ;
#X obj 10 4310 draft/rotate_edge;
#X text 200 4310 ;
#X obj 10 4340 draft/rotate_vertex;
#X text 200 4340 ;
#X obj 10 4370 draft/scale;
#X text 200 4370 scale(objects \,  scale \,  [center] \,  copy);
#X obj 10 4400 draft/scaleEdge;
#X text 200 4400 ;
#X obj 10 4430 draft/scaleVertex;
#X text 200 4430 ;
#X obj 10 4460 draft/scale_edge;
#X text 200 4460 ;
#X obj 10 4490 draft/scale_vertex;
#X text 200 4490 ;
#X obj 10 4520 draft/select;
#X text 200 4520 Unselects everything and selects only the given list of objects.;
#X obj 10 4550 draft/setParam;
#X text 200 4550 Set a Draft parameter with the given value.;
#X obj 10 4580 draft/set_param;
#X text 200 4580 Set a Draft parameter with the given value.;
#X obj 10 4610 draft/shapify;
#X text 200 4610 Transform a parametric object into a static \,  non-parametric shape.;
#X obj 10 4640 draft/split;
#X text 200 4640 ;
#X obj 10 4670 draft/string_encode_coin;
#X text 200 4670 Encode a unicode object to be used as a string in coin.;
#X obj 10 4700 draft/stringencodecoin;
#X text 200 4700 Encode a unicode object to be used as a string in coin.;
#X obj 10 4730 draft/type_check;
#X text 200 4730 Check that the arguments are instances of certain types.;
#X obj 10 4760 draft/typecheck;
#X text 200 4760 Check that the arguments are instances of certain types.;
#X obj 10 4790 draft/ungroup;
#X text 200 4790 Remove the object from any group to which it belongs.;
#X obj 10 4820 draft/upgrade;
#X text 200 4820 Upgrade the given objects.;
